using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Enemy_invulnerability : StateMachineBehaviour
{
    BossCucua bossCucua;

    // OnStateEnter is called when a transition starts and the state machine starts to evaluate this state
    override public void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        bossCucua = animator.GetComponent<BossCucua>();
        bossCucua.enemy.followSpeed = 11;
        BossCucua.invulnerable = true;
        bossCucua.CancelInvoke();        
    }

    // OnStateUpdate is called on each Update frame between OnStateEnter and OnStateExit callbacks
    override public void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        
    }

    // OnStateExit is called when a transition ends and the state machine finishes evaluating this state
    override public void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    { 
        BossCucua.invulnerable = false;
        bossCucua.isTransformed = true;
        animator.SetBool("IsTransformed", true);
        bossCucua.InvokeRepeating("FlameAttack", 0.5f, 1f);
    }
}
